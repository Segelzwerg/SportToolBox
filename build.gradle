plugins {
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'application'
    id 'io.franzbecker.gradle-lombok' version '3.2.0'
    id 'com.bmuschko.docker-remote-api' version '6.1.1'
}

group = 'segelzwerg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 8
targetCompatibility = 8

application {
    mainClassName = 'segelzwerg.sporttooolbox.SporttooolboxApplication'
}

wrapper {
    gradleVersion = '6.0.1'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/com.mashape.unirest/unirest-java
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    // https://mvnrepository.com/artifact/io.florianlopes/spring-mvc-test-utils
    compile group: 'io.florianlopes', name: 'spring-mvc-test-utils', version: '2.2.1'
}

test {
    useJUnitPlatform()
}

apply plugin: 'java'
apply plugin: "io.franzbecker.gradle-lombok"
apply plugin: 'jacoco'

import io.franzbecker.gradle.lombok.task.DelombokTask

// Lombok Task
lombok {
    version = "1.18.10"
}

task delombok(type: DelombokTask) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

task generateJavadocs(type: Javadoc) {
    dependsOn delombok
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadocs")
    failOnError = false;
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport